name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: CryptoViewer.sln
      # Descomenta y ajusta las siguientes líneas si tienes estos proyectos
      # Test_Project_Path: tests/CryptoViewer.Tests/CryptoViewer.Tests.csproj
      # Wap_Project_Directory: CryptoViewer.Package
      # Wap_Project_Path: CryptoViewer.Package/CryptoViewer.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Instalar .NET Core
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Agregar MSBuild al PATH
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restaurar las dependencias del proyecto
    - name: Restore dependencies
      run: dotnet restore

    # Compilar el proyecto
    - name: Build
      run: dotnet build --no-restore --configuration ${{ matrix.configuration }}

    # Ejecutar tests unitarios si existen
    - name: Execute unit tests
      run: dotnet test --no-build --configuration ${{ matrix.configuration }}
      continue-on-error: true

    # Analizar el código con StyleCop si está instalado
    - name: Run StyleCop Analysis
      run: |
        if (Get-ChildItem -Recurse -Filter *.csproj | Select-String -Pattern 'StyleCop.Analyzers') {
          Write-Host "✅ Running StyleCop analysis..."
          dotnet build --no-restore --configuration ${{ matrix.configuration }} /p:TreatWarningsAsErrors=true
        } else {
          Write-Host "⚠️ StyleCop.Analyzers not found. Skipping analysis."
        }
      continue-on-error: true

    # Publicar el proyecto (opcional)
    - name: Publish
      run: dotnet publish --no-build --configuration ${{ matrix.configuration }} --output ./publish
      if: matrix.configuration == 'Release'

    # Subir los artefactos compilados
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CryptoViewer-${{ matrix.configuration }}
        path: |
          ./publish/
          **/*.dll
          **/*.exe
          !**/obj/**
          !**/bin/Debug/**
        if-no-files-found: ignore